!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@wdio/reporter"),require("auto-api-client-js"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["exports","@wdio/reporter","auto-api-client-js","fs","path"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["wdio-applause-reporter"]={},t.WDIOReporter,t.autoApiClientJs,t.fs,t.path)}(this,(function(t,e,s,i,a){"use strict";function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var u=o(e);class n extends u.default{constructor(t){const e={stdout:!0,...t};super(e),this.uidToResultIdMap={},this.autoapi=new s.AutoApi({clientConfig:{baseUrl:e.baseUrl,apiKey:e.apiKey},productId:e.productId})}get isSynchronised(){return 0===this.autoapi.getCallsInFlight}onTestStart(t){this.uidToResultIdMap[t.uid]=this.autoapi.startTestCase(t.title,browser.sessionId).then((t=>t.data.testResultId))}async onTestPass(t){const e=await this.uidToResultIdMap[t.uid];await this.autoapi.submitTestResult(e,s.TestResultStatus.PASSED)}async onTestFail(t){const e=await this.uidToResultIdMap[t.uid];await this.autoapi.submitTestResult(e,s.TestResultStatus.FAILED)}async onTestRetry(t){const e=await this.uidToResultIdMap[t.uid];await this.autoapi.submitTestResult(e,s.TestResultStatus.SKIPPED)}async onTestSkip(t){const e=await this.uidToResultIdMap[t.uid];await this.autoapi.submitTestResult(e,s.TestResultStatus.SKIPPED)}async onRunnerEnd(t){const e=Object.values(this.uidToResultIdMap);let s=[];await Promise.all(e).then((t=>s=null==t?[]:t)).catch((()=>console.error("Unable to retrieve Applause TestResultIds")));const o=(await this.autoapi.getProviderSessionLinks(s)).data||[];if(o.length>0){console.info(JSON.stringify(o));const e=t.config.outputDir||".";i.writeFileSync(a.join(e,"providerUrls.txt"),JSON.stringify(o,null,1))}}}t.ApplauseReporter=n,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.min.js.map
