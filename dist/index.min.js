!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports,require("@wdio/reporter"),require("auto-api-client-js"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["exports","@wdio/reporter","auto-api-client-js","fs","path"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self)["wdio-applause-reporter"]={},t.WDIOReporter,t.autoApiClientJs,t.fs,t.path)}(this,(function(t,s,e,i,a){"use strict";function u(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var o=u(s);class n extends o.default{get isSynchronised(){return void 0!==this.autoapi&&(0===this.autoapi.getCallsInFlight&&this.isEnded)}constructor(t){super({stdout:!0,...t}),this.testRunId=Promise.resolve(0),this.isEnded=!0,this.uidToResultIdMap={},this.resultSubmissionMap={},this.autoapi=new e.AutoApi({clientConfig:{baseUrl:t.baseUrl,apiKey:t.apiKey},productId:t.productId,testRailOptions:t.testRail})}async onRunnerStart(){this.testRunId=this.autoapi.startTestRun({tests:[]}).then((t=>t.data.runId));let t=await this.testRunId;this.isEnded=!1,this.sdkHeartbeat=new e.TestRunHeartbeatService(t,this.autoapi),await this.sdkHeartbeat.start()}onTestStart(t){this.uidToResultIdMap[t.uid]=this.testRunId.then((s=>this.autoapi.startTestCase({providerSessionIds:[browser.sessionId],testCaseName:t.title,testRunId:s}))).then((t=>t.data.testResultId))}onTestPass(t){this.uidToResultIdMap[t.uid].then((t=>{this.resultSubmissionMap[t]=this.autoapi.submitTestResult({testResultId:t,status:e.TestResultStatus.PASSED})}))}onTestFail(t){this.uidToResultIdMap[t.uid].then((t=>{this.resultSubmissionMap[t]=this.autoapi.submitTestResult({testResultId:t,status:e.TestResultStatus.FAILED})}))}onTestRetry(t){this.uidToResultIdMap[t.uid].then((t=>{this.resultSubmissionMap[t]=this.autoapi.submitTestResult({testResultId:t,status:e.TestResultStatus.SKIPPED})}))}onTestSkip(t){this.uidToResultIdMap[t.uid].then((t=>{this.resultSubmissionMap[t]=this.autoapi.submitTestResult({testResultId:t,status:e.TestResultStatus.SKIPPED})}))}async onRunnerEnd(t){let s=await this.testRunId,e=await Promise.all(Object.values(this.uidToResultIdMap));await Promise.all(Object.values(this.resultSubmissionMap)),await(this.sdkHeartbeat?.end()),await this.autoapi.endTestRun(s);const u=(await this.autoapi.getProviderSessionLinks(e)).data||[];if(u.length>0){console.info(JSON.stringify(u));const s=t.config.outputDir||".";i.writeFileSync(a.join(s,"providerUrls.txt"),JSON.stringify(u,null,1))}this.isEnded=!0}}t.ApplauseReporter=n,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.min.js.map
