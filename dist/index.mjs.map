{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["import WDIOReporter, { TestStats } from '@wdio/reporter';\nimport {\n  ApplauseReporter,\n  ApplauseConfig,\n  TestResultStatus,\n  loadConfig,\n} from 'applause-reporter-common';\nimport { Browser } from 'webdriverio';\n\ndeclare let browser: Browser;\n\nexport class ApplauseWdioReporter extends WDIOReporter {\n  private reporter: ApplauseReporter;\n\n  constructor(options: Partial<ApplauseConfig>) {\n    super({ stdout: true, ...options });\n    const config = loadConfig({\n      properties: options,\n    });\n    // Setup the initial maps\n    this.reporter = new ApplauseReporter(config);\n  }\n\n  onRunnerStart() {\n    this.reporter.runnerStart();\n  }\n\n  onTestStart(testStats: TestStats): void {\n    this.reporter.startTestCase(testStats.uid, testStats.fullTitle, {\n      providerSessionIds: [browser.sessionId],\n    });\n  }\n\n  onTestPass(test: TestStats): void {\n    this.reporter.submitTestCaseResult(test.uid, TestResultStatus.PASSED, {\n      providerSessionGuids: [browser.sessionId],\n    });\n  }\n\n  onTestFail(test: TestStats): void {\n    this.reporter.submitTestCaseResult(test.uid, TestResultStatus.FAILED, {\n      failureReason: test.error?.message,\n      providerSessionGuids: [browser.sessionId],\n    });\n  }\n\n  onTestRetry(test: TestStats): void {\n    this.reporter.submitTestCaseResult(test.uid, TestResultStatus.SKIPPED, {\n      failureReason: test.error?.message,\n      providerSessionGuids: [browser.sessionId],\n    });\n  }\n\n  onTestSkip(test: TestStats): void {\n    this.reporter.submitTestCaseResult(test.uid, TestResultStatus.SKIPPED, {\n      failureReason: test.error?.message,\n      providerSessionGuids: [browser.sessionId],\n    });\n  }\n\n  async onRunnerEnd(): Promise<void> {\n    await this.reporter.runnerEnd();\n  }\n\n  get isSynchronised(): boolean {\n    return this.reporter.isSynchronized();\n  }\n}\n\nexport { ApplauseConfig };\n"],"names":[],"mappings":";;;AAWM,MAAO,oBAAqB,SAAQ,YAAY,CAAA;AAC5C,IAAA,QAAQ,CAAmB;AAEnC,IAAA,WAAA,CAAY,OAAgC,EAAA;QAC1C,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;QACpC,MAAM,MAAM,GAAG,UAAU,CAAC;AACxB,YAAA,UAAU,EAAE,OAAO;AACpB,SAAA,CAAC,CAAC;;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;KAC7B;AAED,IAAA,WAAW,CAAC,SAAoB,EAAA;AAC9B,QAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,EAAE;AAC9D,YAAA,kBAAkB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;AACxC,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,IAAe,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,MAAM,EAAE;AACpE,YAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;AAC1C,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,IAAe,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,MAAM,EAAE;AACpE,YAAA,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO;AAClC,YAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;AAC1C,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,WAAW,CAAC,IAAe,EAAA;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,OAAO,EAAE;AACrE,YAAA,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO;AAClC,YAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;AAC1C,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,IAAe,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,OAAO,EAAE;AACrE,YAAA,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO;AAClC,YAAA,oBAAoB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC;AAC1C,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,MAAM,WAAW,GAAA;AACf,QAAA,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KACjC;AAED,IAAA,IAAI,cAAc,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;KACvC;AACF;;;;"}